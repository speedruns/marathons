{"version":3,"sources":["../src/vnode.js","../src/options.js","../src/h.js","../src/util.js","../src/clone-element.js","../src/constants.js","../src/render-queue.js","../src/vdom/index.js","../src/dom/index.js","../src/vdom/diff.js","../src/vdom/component-recycler.js","../src/vdom/component.js","../src/component.js","../src/render.js","../src/preact.js","util.js","components/run.js","../node_modules/atoa/atoa.js","../node_modules/ticky/ticky-browser.js","../node_modules/contra/debounce.js","../node_modules/contra/emitter.js","../node_modules/custom-event/index.js","../node_modules/crossvent/src/eventmap.js","../node_modules/crossvent/src/crossvent.js","../node_modules/dragula/classes.js","../node_modules/dragula/dragula.js","../node_modules/react-dragula/react-dragula.js","components/run-selector.js","components/run-slot.js","components/scheduler.js","index.js"],"names":["VNode","options","stack","EMPTY_CHILDREN","h","nodeName","attributes","children","lastSimple","child","simple","i","arguments","length","push","pop","undefined","String","p","key","vnode","extend","obj","props","defer","Promise","resolve","then","bind","setTimeout","cloneElement","slice","call","NO_RENDER","SYNC_RENDER","FORCE_RENDER","ASYNC_RENDER","IS_NON_DIMENSIONAL","items","enqueueRender","component","_dirty","rerender","list","isSameNodeType","node","hydrating","_componentConstructor","isNamedNode","normalizedNodeName","defaultProps","document","createElementNS","removeNode","parentNode","removeChild","setAccessor","name","old","value","style","innerHTML","__html","useCapture","toLowerCase","_listeners","ns","eventProxy","mounts","diffLevel","flushMounts","c","parent","ATTR_KEY","ret","componentRoot","out","prevSvgMode","buildComponentFromVNode","vnodeName","dom","firstChild","appendChild","vchildren","nodeValue","context","mountAll","dangerouslySetInnerHTML","originalChildren","keyed","min","len","childrenLen","vlen","j","f","vchild","keyedLen","unmountOnly","next","previousSibling","diffAttributes","attrs","recyclerComponents","createComponent","Ctor","prototype","constructor","nextBase","doRender","setComponentProps","_disable","componentWillReceiveProps","prevContext","renderMode","syncComponentUpdates","__ref","renderComponent","state","previousProps","previousState","isUpdate","base","initialBase","snapshot","rendered","inst","cbase","shouldComponentUpdate","prevProps","render","getSnapshotBeforeUpdate","childComponent","toUnmount","childProps","getNodeProps","initialChildComponent","_parentComponent","_component","baseParent","replaceChild","componentRef","t","unshift","afterUpdate","_renderCallbacks","isChild","originalComponent","oldDom","isDirectOwner","isOwner","beforeUnmount","componentWillUnmount","callback","diff","formatTime","millis","Math","floor","m","s","hour","padStart","minute","second","fuzzysearch","needle","haystack","hlen","nlen","outer","nch","charCodeAt","idCounter","uniqueID","Run","_state","run","game","category","runner","estimate","pb","Component","RunSelector","runFilter","ev","input","target","filterText","setState","runs","text","filter","onSelect","updateRunFilter","filteredRuns","map","id","RunSlot","active","selectedRun","onChange","entry","type","duration","onRemove","availableRuns","slotClassList","clear","toggleActivated","removeSlot","selectRun","Scheduler","scheduleEntries","concat","slotIndex","newEntry","newEntries","index","console","log","_","startTime","entryStartTime","Date","setMilliseconds","runsById","reduce","acc","some","includes","startTimeForEntry","toLocaleString","updateEntryInSlot","removeScheduleEntry","addScheduleEntry","init","fetch","credentials","response","json","data","catch","error","schedulerContainer","querySelector","eventStart"],"mappings":"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BACE;AAAM,QAAA,KAAK,EAAC;AAAZ,SAA6B0H,QAAQ,CAAC1H,IAAtC,CADF,cAC6D;AAAM,QAAA,KAAK,EAAC;AAAZ,SAA2B2H,MAAM,CAAC3H,IAAlC,CAD7D,CANF,CADF,EAYIlD,QAAQ,CAACM,MAAT,GAAkB,CAAlB,IACA;AAAK,QAAA,KAAK,EAAC;AAAX,SACGN,QADH,CAbJ,CADF,CADF;AAsBD;;;;EA1BegL;;eA6BHR;;;AChCf;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACbrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjhmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"scheduler.map","sourceRoot":"../../priv/scheduler/src","sourcesContent":["/**\n * Virtual DOM Node\n * @typedef VNode\n * @property {string | function} nodeName The string of the DOM node to create or Component constructor to render\n * @property {Array<VNode | string>} children The children of node\n * @property {string | number | undefined} key The key used to identify this VNode in a list\n * @property {object} attributes The properties of this VNode\n */\nexport const VNode = function VNode() {};\n","/**\n * @typedef {import('./component').Component} Component\n * @typedef {import('./vnode').VNode} VNode\n */\n\n/**\n * Global options\n * @public\n * @typedef Options\n * @property {boolean} [syncComponentUpdates] If `true`, `prop` changes trigger synchronous component updates. Defaults to true.\n * @property {(vnode: VNode) => void} [vnode] Processes all created VNodes.\n * @property {(component: Component) => void} [afterMount] Hook invoked after a component is mounted.\n * @property {(component: Component) => void} [afterUpdate] Hook invoked after the DOM is updated with a component's latest render.\n * @property {(component: Component) => void} [beforeUnmount] Hook invoked immediately before a component is unmounted.\n * @property {(rerender: function) => void} [debounceRendering] Hook invoked whenever a rerender is requested. Can be used to debounce rerenders.\n * @property {(event: Event) => Event | void} [event] Hook invoked before any Preact event listeners. The return value (if any) replaces the native browser event given to event listeners\n */\n\n/** @type {Options}  */\nconst options = {};\n\nexport default options;\n","import { VNode } from './vnode';\nimport options from './options';\n\n\nconst stack = [];\n\nconst EMPTY_CHILDREN = [];\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility\n * reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a\n * lightweight representation of the structure of a DOM tree. This structure can\n * be realized by recursively comparing it against the current _actual_ DOM\n * structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string | function} nodeName An element name. Ex: `div`, `a`, `span`, etc.\n * @param {object | null} attributes Any attributes/props to set on the created element.\n * @param {VNode[]} [rest] Additional arguments are taken to be children to\n *  append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n\tlet children=EMPTY_CHILDREN, lastSimple, child, simple, i;\n\tfor (i=arguments.length; i-- > 2; ) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children!=null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop!==undefined) {\n\t\t\tfor (i=child.length; i--; ) stack.push(child[i]);\n\t\t}\n\t\telse {\n\t\t\tif (typeof child==='boolean') child = null;\n\n\t\t\tif ((simple = typeof nodeName!=='function')) {\n\t\t\t\tif (child==null) child = '';\n\t\t\t\telse if (typeof child==='number') child = String(child);\n\t\t\t\telse if (typeof child!=='string') simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length-1] += child;\n\t\t\t}\n\t\t\telse if (children===EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tlet p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes==null ? undefined : attributes;\n\tp.key = attributes==null ? undefined : attributes.key;\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode!==undefined) options.vnode(p);\n\n\treturn p;\n}\n","/**\n * Copy all properties from `props` onto `obj`.\n * @param {object} obj Object onto which properties should be copied.\n * @param {object} props Object from which to copy properties.\n * @returns {object}\n * @private\n */\nexport function extend(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn obj;\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n * @type {(callback: function) => void}\n */\nexport const defer = typeof Promise=='function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\n","import { extend } from './util';\nimport { h } from './h';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {import('./vnode').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./vnode').VNode>} [rest] Any additional arguments will be used as replacement\n *  children.\n */\nexport function cloneElement(vnode, props) {\n\treturn h(\n\t\tvnode.nodeName,\n\t\textend(extend({}, vnode.attributes), props),\n\t\targuments.length>2 ? [].slice.call(arguments, 2) : vnode.children\n\t);\n}\n","// render modes\n\n/** Do not re-render a component */\nexport const NO_RENDER = 0;\n/** Synchronously re-render a component and its children */\nexport const SYNC_RENDER = 1;\n/** Synchronously re-render a component, even if its lifecycle methods attempt to prevent it. */\nexport const FORCE_RENDER = 2;\n/** Queue asynchronous re-render of a component and it's children */\nexport const ASYNC_RENDER = 3;\n\n\nexport const ATTR_KEY = '__preactattr_';\n\n/** DOM properties that should NOT have \"px\" added when numeric */\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n","import options from './options';\nimport { defer } from './util';\nimport { renderComponent } from './vdom/component';\n\n/**\n * Managed queue of dirty components to be re-rendered\n * @type {Array<import('./component').Component>}\n */\nlet items = [];\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./component').Component} component The component to rerender\n */\nexport function enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component)==1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\n/** Rerender all enqueued dirty components */\nexport function rerender() {\n\tlet p, list = items;\n\titems = [];\n\twhile ( (p = list.pop()) ) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n","import { extend } from '../util';\n\n\n/**\n * Check if two nodes are equivalent.\n * @param {import('../dom').PreactElement} node DOM Node to compare\n * @param {import('../vnode').VNode} vnode Virtual DOM node to compare\n * @param {boolean} [hydrating=false] If true, ignores component constructors\n *  when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\t\treturn node.splitText!==undefined;\n\t}\n\tif (typeof vnode.nodeName==='string') {\n\t\treturn !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n\t}\n\treturn hydrating || node._componentConstructor===vnode.nodeName;\n}\n\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n * @param {import('../dom').PreactElement} node A DOM Element to inspect the name of.\n * @param {string} nodeName Unnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n\treturn node.normalizedNodeName===nodeName || node.nodeName.toLowerCase()===nodeName.toLowerCase();\n}\n\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n * @param {import('../vnode').VNode} vnode The VNode to get props for\n * @returns {object} The props to use for this VNode\n */\nexport function getNodeProps(vnode) {\n\tlet props = extend({}, vnode.attributes);\n\tprops.children = vnode.children;\n\n\tlet defaultProps = vnode.nodeName.defaultProps;\n\tif (defaultProps!==undefined) {\n\t\tfor (let i in defaultProps) {\n\t\t\tif (props[i]===undefined) {\n\t\t\t\tprops[i] = defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn props;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * A DOM event listener\n * @typedef {(e: Event) => void} EventListner\n */\n\n/**\n * A mapping of event types to event listeners\n * @typedef {Object.<string, EventListener>} EventListenerMap\n */\n\n/**\n * Properties Preact adds to elements it creates\n * @typedef PreactElementExtensions\n * @property {string} [normalizedNodeName] A normalized node name to use in diffing\n * @property {EventListenerMap} [_listeners] A map of event listeners added by components to this DOM node\n * @property {import('../component').Component} [_component] The component that rendered this DOM node\n * @property {function} [_componentConstructor] The constructor of the component that rendered this DOM node\n */\n\n/**\n * A DOM element that has been extended with Preact properties\n * @typedef {Element & ElementCSSInlineStyle & PreactElementExtensions} PreactElement\n */\n\n/**\n * Create an element with the given nodeName.\n * @param {string} nodeName The DOM node to create\n * @param {boolean} [isSvg=false] If `true`, creates an element within the SVG\n *  namespace.\n * @returns {PreactElement} The created DOM node\n */\nexport function createNode(nodeName, isSvg) {\n\t/** @type {PreactElement} */\n\tlet node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\n\n/**\n * Remove a child node from its parent if attached.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n\n/**\n * Set a named attribute on the given Node, with special behavior for some names\n * and event handlers. If `value` is `null`, the attribute/handler will be\n * removed.\n * @param {PreactElement} node An element to mutate\n * @param {string} name The name/key to set, such as an event or attribute name\n * @param {*} old The last value that was set for this name/node pair\n * @param {*} value An attribute value, such as a function to be used as an\n *  event handler\n * @param {boolean} isSvg Are we currently diffing inside an svg?\n * @private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n\tif (name==='className') name = 'class';\n\n\n\tif (name==='key') {\n\t\t// ignore\n\t}\n\telse if (name==='ref') {\n\t\tif (old) old(null);\n\t\tif (value) value(node);\n\t}\n\telse if (name==='class' && !isSvg) {\n\t\tnode.className = value || '';\n\t}\n\telse if (name==='style') {\n\t\tif (!value || typeof value==='string' || typeof old==='string') {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value==='object') {\n\t\t\tif (typeof old!=='string') {\n\t\t\t\tfor (let i in old) if (!(i in value)) node.style[i] = '';\n\t\t\t}\n\t\t\tfor (let i in value) {\n\t\t\t\tnode.style[i] = typeof value[i]==='number' && IS_NON_DIMENSIONAL.test(i)===false ? (value[i]+'px') : value[i];\n\t\t\t}\n\t\t}\n\t}\n\telse if (name==='dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t}\n\telse if (name[0]=='o' && name[1]=='n') {\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\telse {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\n\t}\n\telse if (name!=='list' && name!=='type' && !isSvg && name in node) {\n\t\t// Attempt to set a DOM property to the given value.\n\t\t// IE & FF throw for certain property-value combinations.\n\t\ttry {\n\t\t\tnode[name] = value==null ? '' : value;\n\t\t} catch (e) { }\n\t\tif ((value==null || value===false) && name!='spellcheck') node.removeAttribute(name);\n\t}\n\telse {\n\t\tlet ns = isSvg && (name !== (name = name.replace(/^xlink:?/, '')));\n\t\t// spellcheck is treated differently than all other boolean values and\n\t\t// should not be removed when the value is `false`. See:\n\t\t// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-spellcheck\n\t\tif (value==null || value===false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n\t\t\telse node.removeAttribute(name);\n\t\t}\n\t\telse if (typeof value!=='function') {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n\t\t\telse node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n","import { ATTR_KEY } from '../constants';\nimport { isSameNodeType, isNamedNode } from './index';\nimport { buildComponentFromVNode } from './component';\nimport { createNode, setAccessor } from '../dom/index';\nimport { unmountComponent } from './component';\nimport options from '../options';\nimport { removeNode } from '../dom/index';\n\n/**\n * Queue of components that have been mounted and are awaiting componentDidMount\n * @type {Array<import('../component').Component>}\n */\nexport const mounts = [];\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0;\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false;\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false;\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n\tlet c;\n\twhile ((c=mounts.pop())) {\n\t\tif (options.afterMount) options.afterMount(c);\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\n\n/**\n * Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing\n *  the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {Element} parent ?\n * @param {boolean} componentRoot ?\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n\tif (!diffLevel++) {\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\n\t\tisSvgMode = parent!=null && parent.ownerSVGElement!==undefined;\n\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\n\t\thydrating = dom!=null && !(ATTR_KEY in dom);\n\t}\n\n\tlet ret = idiff(dom, vnode, context, mountAll, componentRoot);\n\n\t// append the element if its a new parent\n\tif (parent && ret.parentNode!==parent) parent.appendChild(ret);\n\n\t// diffLevel being reduced to 0 means we're exiting the diff\n\tif (!--diffLevel) {\n\t\thydrating = false;\n\t\t// invoke queued componentDidMount lifecycle methods\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\n\n/**\n * Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} [componentRoot] ?\n * @private\n */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tlet out = dom,\n\t\tprevSvgMode = isSvgMode;\n\n\t// empty values (null, undefined, booleans) render as empty Text nodes\n\tif (vnode==null || typeof vnode==='boolean') vnode = '';\n\n\n\t// Fast case: Strings & Numbers create/update Text nodes.\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\n\t\t// update if it's already a Text node:\n\t\tif (dom && dom.splitText!==undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n\t\t\tif (dom.nodeValue!=vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout[ATTR_KEY] = true;\n\n\t\treturn out;\n\t}\n\n\n\t// If the VNode represents a Component, perform a component diff:\n\tlet vnodeName = vnode.nodeName;\n\tif (typeof vnodeName==='function') {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvgMode = vnodeName==='svg' ? true : vnodeName==='foreignObject' ? false : isSvgMode;\n\n\n\t// If there's no existing element or it's the wrong type, create a new one:\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\t// move children into the replacement node\n\t\t\twhile (dom.firstChild) out.appendChild(dom.firstChild);\n\n\t\t\t// if the previous Element was mounted into the DOM, replace it inline\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\t// recycle the old element (skips non-Element node types)\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\n\tlet fc = out.firstChild,\n\t\tprops = out[ATTR_KEY],\n\t\tvchildren = vnode.children;\n\n\tif (props==null) {\n\t\tprops = out[ATTR_KEY] = {};\n\t\tfor (let a=out.attributes, i=a.length; i--; ) props[a[i].name] = a[i].value;\n\t}\n\n\t// Optimization: fast-path for elements containing a single TextNode:\n\tif (!hydrating && vchildren && vchildren.length===1 && typeof vchildren[0]==='string' && fc!=null && fc.splitText!==undefined && fc.nextSibling==null) {\n\t\tif (fc.nodeValue!=vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t}\n\t// otherwise, if there are existing or new children, diff them:\n\telse if (vchildren && vchildren.length || fc!=null) {\n\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML!=null);\n\t}\n\n\n\t// Apply attributes/props from VNode to the DOM Element:\n\tdiffAttributes(out, vnode.attributes, props);\n\n\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\n\n/**\n * Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n * @param {import('../dom').PreactElement} dom Element whose children should be compared & mutated\n * @param {Array<import('../vnode').VNode>} vchildren Array of VNodes to compare to `dom.childNodes`\n * @param {object} context Implicitly descendant context object (from most\n *  recent `getChildContext()`)\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} isHydrating if `true`, consumes externally created elements\n *  similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tlet originalChildren = dom.childNodes,\n\t\tchildren = [],\n\t\tkeyed = {},\n\t\tkeyedLen = 0,\n\t\tmin = 0,\n\t\tlen = originalChildren.length,\n\t\tchildrenLen = 0,\n\t\tvlen = vchildren ? vchildren.length : 0,\n\t\tj, c, f, vchild, child;\n\n\t// Build up a map of keyed children and an Array of unkeyed children:\n\tif (len!==0) {\n\t\tfor (let i=0; i<len; i++) {\n\t\t\tlet child = originalChildren[i],\n\t\t\t\tprops = child[ATTR_KEY],\n\t\t\t\tkey = vlen && props ? child._component ? child._component.__key : props.key : null;\n\t\t\tif (key!=null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = child;\n\t\t\t}\n\t\t\telse if (props || (child.splitText!==undefined ? (isHydrating ? child.nodeValue.trim() : true) : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen!==0) {\n\t\tfor (let i=0; i<vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tlet key = vchild.key;\n\t\t\tif (key!=null) {\n\t\t\t\tif (keyedLen && keyed[key]!==undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (min<childrenLen) {\n\t\t\t\tfor (j=min; j<childrenLen; j++) {\n\t\t\t\t\tif (children[j]!==undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\tif (j===childrenLen-1) childrenLen--;\n\t\t\t\t\t\tif (j===min) min++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child!==dom && child!==f) {\n\t\t\t\tif (f==null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t}\n\t\t\t\telse if (child===f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// remove unused keyed children:\n\tif (keyedLen) {\n\t\tfor (let i in keyed) if (keyed[i]!==undefined) recollectNodeTree(keyed[i], false);\n\t}\n\n\t// remove orphaned unkeyed children:\n\twhile (min<=childrenLen) {\n\t\tif ((child = children[childrenLen--])!==undefined) recollectNodeTree(child, false);\n\t}\n}\n\n\n\n/**\n * Recursively recycle (or just unmount) a node and its descendants.\n * @param {import('../dom').PreactElement} node DOM node to start\n *  unmount/removal from\n * @param {boolean} [unmountOnly=false] If `true`, only triggers unmount\n *  lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n\tlet component = node._component;\n\tif (component) {\n\t\t// if node is owned by a Component, unmount that component (ends up recursing back here)\n\t\tunmountComponent(component);\n\t}\n\telse {\n\t\t// If the node's VNode had a ref function, invoke it with null here.\n\t\t// (this is part of the React spec, and smart for unsetting references)\n\t\tif (node[ATTR_KEY]!=null && node[ATTR_KEY].ref) node[ATTR_KEY].ref(null);\n\n\t\tif (unmountOnly===false || node[ATTR_KEY]==null) {\n\t\t\tremoveNode(node);\n\t\t}\n\n\t\tremoveChildren(node);\n\t}\n}\n\n\n/**\n * Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tlet next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\n\n/**\n * Apply differences in attributes from a VNode to the given DOM Element.\n * @param {import('../dom').PreactElement} dom Element with attributes to diff `attrs` against\n * @param {object} attrs The desired end-state key-value attribute pairs\n * @param {object} old Current/previous attributes (from previous VNode or\n *  element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n\tlet name;\n\n\t// remove attributes no longer present on the vnode by setting them to undefined\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name]!=null) && old[name]!=null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\n\t\t}\n\t}\n\n\t// add new & update changed attributes\n\tfor (name in attrs) {\n\t\tif (name!=='children' && name!=='innerHTML' && (!(name in old) || attrs[name]!==(name==='value' || name==='checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\n\t\t}\n\t}\n}\n","import { Component } from '../component';\n\n/**\n * Retains a pool of Components for re-use.\n * @type {Component[]}\n * @private\n */\nexport const recyclerComponents = [];\n\n\n/**\n * Create a component. Normalizes differences between PFC's and classful\n * Components.\n * @param {function} Ctor The constructor of the component to create\n * @param {object} props The initial props of the component\n * @param {object} context The initial context of the component\n * @returns {import('../component').Component}\n */\nexport function createComponent(Ctor, props, context) {\n\tlet inst, i = recyclerComponents.length;\n\n\tif (Ctor.prototype && Ctor.prototype.render) {\n\t\tinst = new Ctor(props, context);\n\t\tComponent.call(inst, props, context);\n\t}\n\telse {\n\t\tinst = new Component(props, context);\n\t\tinst.constructor = Ctor;\n\t\tinst.render = doRender;\n\t}\n\n\n\twhile (i--) {\n\t\tif (recyclerComponents[i].constructor===Ctor) {\n\t\t\tinst.nextBase = recyclerComponents[i].nextBase;\n\t\t\trecyclerComponents.splice(i, 1);\n\t\t\treturn inst;\n\t\t}\n\t}\n\n\treturn inst;\n}\n\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { SYNC_RENDER, NO_RENDER, FORCE_RENDER, ASYNC_RENDER, ATTR_KEY } from '../constants';\nimport options from '../options';\nimport { extend } from '../util';\nimport { enqueueRender } from '../render-queue';\nimport { getNodeProps } from './index';\nimport { diff, mounts, diffLevel, flushMounts, recollectNodeTree, removeChildren } from './diff';\nimport { createComponent, recyclerComponents } from './component-recycler';\nimport { removeNode } from '../dom/index';\n\n/**\n * Set a component's `props` and possibly re-render the component\n * @param {import('../component').Component} component The Component to set props on\n * @param {object} props The new props\n * @param {number} renderMode Render options - specifies how to re-render the component\n * @param {object} context The new context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n */\nexport function setComponentProps(component, props, renderMode, context, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tcomponent.__ref = props.ref;\n\tcomponent.__key = props.key;\n\tdelete props.ref;\n\tdelete props.key;\n\n\tif (typeof component.constructor.getDerivedStateFromProps === 'undefined') {\n\t\tif (!component.base || mountAll) {\n\t\t\tif (component.componentWillMount) component.componentWillMount();\n\t\t}\n\t\telse if (component.componentWillReceiveProps) {\n\t\t\tcomponent.componentWillReceiveProps(props, context);\n\t\t}\n\t}\n\n\tif (context && context!==component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (renderMode!==NO_RENDER) {\n\t\tif (renderMode===SYNC_RENDER || options.syncComponentUpdates!==false || !component.base) {\n\t\t\trenderComponent(component, SYNC_RENDER, mountAll);\n\t\t}\n\t\telse {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tif (component.__ref) component.__ref(component);\n}\n\n\n\n/**\n * Render a Component, triggering necessary lifecycle events and taking\n * High-Order Components into account.\n * @param {import('../component').Component} component The component to render\n * @param {number} [renderMode] render mode, see constants.js for available options.\n * @param {boolean} [mountAll] Whether or not to immediately mount all components\n * @param {boolean} [isChild] ?\n * @private\n */\nexport function renderComponent(component, renderMode, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tlet props = component.props,\n\t\tstate = component.state,\n\t\tcontext = component.context,\n\t\tpreviousProps = component.prevProps || props,\n\t\tpreviousState = component.prevState || state,\n\t\tpreviousContext = component.prevContext || context,\n\t\tisUpdate = component.base,\n\t\tnextBase = component.nextBase,\n\t\tinitialBase = isUpdate || nextBase,\n\t\tinitialChildComponent = component._component,\n\t\tskip = false,\n\t\tsnapshot = previousContext,\n\t\trendered, inst, cbase;\n\n\tif (component.constructor.getDerivedStateFromProps) {\n\t\tstate = extend(extend({}, state), component.constructor.getDerivedStateFromProps(props, state));\n\t\tcomponent.state = state;\n\t}\n\n\t// if updating\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (renderMode!==FORCE_RENDER\n\t\t\t&& component.shouldComponentUpdate\n\t\t\t&& component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t}\n\t\telse if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\trendered = component.render(props, state, context);\n\n\t\t// context to pass to the child, can be updated via (grand-)parent component\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(extend({}, context), component.getChildContext());\n\t\t}\n\n\t\tif (isUpdate && component.getSnapshotBeforeUpdate) {\n\t\t\tsnapshot = component.getSnapshotBeforeUpdate(previousProps, previousState);\n\t\t}\n\n\t\tlet childComponent = rendered && rendered.nodeName,\n\t\t\ttoUnmount, base;\n\n\t\tif (typeof childComponent==='function') {\n\t\t\t// set up high order component link\n\n\t\t\tlet childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor===childComponent && childProps.key==inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, SYNC_RENDER, context, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tcomponent._component = inst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tsetComponentProps(inst, childProps, NO_RENDER, context, false);\n\t\t\t\trenderComponent(inst, SYNC_RENDER, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t}\n\t\telse {\n\t\t\tcbase = initialBase;\n\n\t\t\t// destroy high order component link\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || renderMode===SYNC_RENDER) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base!==initialBase && inst!==initialChildComponent) {\n\t\t\tlet baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base!==baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tlet componentRef = component,\n\t\t\t\tt = component;\n\t\t\twhile ((t=t._parentComponent)) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.unshift(component);\n\t}\n\telse if (!skip) {\n\t\t// Ensure that pending componentDidMount() hooks of child components\n\t\t// are called before the componentDidUpdate() hook in the parent.\n\t\t// Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n\t\t// flushMounts();\n\n\t\tif (component.componentDidUpdate) {\n\t\t\tcomponent.componentDidUpdate(previousProps, previousState, snapshot);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\twhile (component._renderCallbacks.length) component._renderCallbacks.pop().call(component);\n\n\tif (!diffLevel && !isChild) flushMounts();\n}\n\n\n\n/**\n * Apply the Component referenced by a VNode to the DOM.\n * @param {import('../dom').PreactElement} dom The DOM node to mutate\n * @param {import('../vnode').VNode} vnode A Component-referencing VNode\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tlet c = dom && dom._component,\n\t\toriginalComponent = c,\n\t\toldDom = dom,\n\t\tisDirectOwner = c && dom._componentConstructor===vnode.nodeName,\n\t\tisOwner = isDirectOwner,\n\t\tprops = getNodeProps(vnode);\n\twhile (c && !isOwner && (c=c._parentComponent)) {\n\t\tisOwner = c.constructor===vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, ASYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\t}\n\telse {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\t\t\t// passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, SYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom!==oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom, false);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n\n\n/**\n * Remove a component from the DOM and recycle it.\n * @param {import('../component').Component} component The Component instance to unmount\n * @private\n */\nexport function unmountComponent(component) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\tlet base = component.base;\n\n\tcomponent._disable = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\t// recursively tear down & recollect high-order component children:\n\tlet inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner);\n\t}\n\telse if (base) {\n\t\tif (base[ATTR_KEY] && base[ATTR_KEY].ref) base[ATTR_KEY].ref(null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tremoveNode(base);\n\t\trecyclerComponents.push(component);\n\n\t\tremoveChildren(base);\n\t}\n\n\tif (component.__ref) component.__ref(null);\n}\n","import { FORCE_RENDER } from './constants';\nimport { extend } from './util';\nimport { renderComponent } from './vdom/component';\nimport { enqueueRender } from './render-queue';\n/**\n * Base Component class.\n * Provides `setState()` and `forceUpdate()`, which trigger rendering.\n * @typedef {object} Component\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components' getChildContext\n * @public\n *\n * @example\n * class MyFoo extends Component {\n *   render(props, state) {\n *     return <div />;\n *   }\n * }\n */\nexport function Component(props, context) {\n\tthis._dirty = true;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.context = context;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.props = props;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.state = this.state || {};\n\n\tthis._renderCallbacks = [];\n}\n\n\nextend(Component.prototype, {\n\n\t/**\n\t * Update component state and schedule a re-render.\n\t * @param {object} state A dict of state properties to be shallowly merged\n\t * \tinto the current state, or a function that will produce such a dict. The\n\t * \tfunction is called with the current state and props.\n\t * @param {() => void} callback A function to be called once component state is\n\t * \tupdated\n\t */\n\tsetState(state, callback) {\n\t\tif (!this.prevState) this.prevState = this.state;\n\t\tthis.state = extend(\n\t\t\textend({}, this.state),\n\t\t\ttypeof state === 'function' ? state(this.state, this.props) : state\n\t\t);\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t},\n\n\n\t/**\n\t * Immediately perform a synchronous re-render of the component.\n\t * @param {() => void} callback A function to be called after component is\n\t * \tre-rendered.\n\t * @private\n\t */\n\tforceUpdate(callback) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\trenderComponent(this, FORCE_RENDER);\n\t},\n\n\n\t/**\n\t * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n\t * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n\t * @param {object} props Props (eg: JSX attributes) received from parent\n\t * \telement/component\n\t * @param {object} state The component's current state\n\t * @param {object} context Context object, as returned by the nearest\n\t *  ancestor's `getChildContext()`\n\t * @returns {import('./vnode').VNode | void}\n\t */\n\trender() {}\n\n});\n","import { diff } from './vdom/diff';\n\n/**\n * Render JSX into a `parent` Element.\n * @param {import('./vnode').VNode} vnode A (JSX) VNode to render\n * @param {import('./dom').PreactElement} parent DOM element to render into\n * @param {import('./dom').PreactElement} [merge] Attempt to re-use an existing DOM tree rooted at\n *  `merge`\n * @public\n *\n * @example\n * // render a div into <body>:\n * render(<div id=\"hello\">hello!</div>, document.body);\n *\n * @example\n * // render a \"Thing\" component into #foo:\n * const Thing = ({ name }) => <span>{ name }</span>;\n * render(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nexport function render(vnode, parent, merge) {\n\treturn diff(merge, vnode, {}, false, parent, false);\n}\n","import { h, h as createElement } from './h';\nimport { cloneElement } from './clone-element';\nimport { Component } from './component';\nimport { render } from './render';\nimport { rerender } from './render-queue';\nimport options from './options';\n\nexport default {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tComponent,\n\trender,\n\trerender,\n\toptions\n};\n\nexport {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tComponent,\n\trender,\n\trerender,\n\toptions\n};\n","export function formatTime(millis) {\n  const h = Math.floor(millis / 1000 / 60 / 60),\n        m = Math.floor(millis / 1000 / 60 % 60),\n        s = Math.floor(millis / 1000 % 60);\n\n  const hour = `${h}`.padStart(2, '0'),\n        minute = `${m}`.padStart(2, '0'),\n        second = `${s}`.padStart(2, '0');\n\n  return `${hour}:${minute}:${second}`;\n}\n\n\n// Taken and adapted from https://github.com/bevacqua/fuzzysearch/blob/master/index.js\n// Adaptations:\n// - ignore case\nexport function fuzzysearch(needle, haystack) {\n  needle = needle.toLowerCase();\n  haystack = haystack.toLowerCase();\n  var hlen = haystack.length;\n  var nlen = needle.length;\n  if (nlen > hlen) {\n    return false;\n  }\n  if (nlen === hlen) {\n    return needle === haystack;\n  }\n  outer: for (var i = 0, j = 0; i < nlen; i++) {\n    var nch = needle.charCodeAt(i);\n    while (j < hlen) {\n      if (haystack.charCodeAt(j++) === nch) {\n        continue outer;\n      }\n    }\n    return false;\n  }\n  return true;\n}\n\n\n\n// An arbitrary and poor implementation of application-unique ids for usage as\n// keys when rendering lists.\nlet idCounter = 0;\nexport function uniqueID() {\n  return idCounter++;\n}\n","import { h, Component } from 'preact';\nimport { formatTime } from '../util';\n\nclass Run extends Component {\n  render({run, children}, _state) {\n    const {game, category, runner} = run;\n\n    return (\n      <div class=\"run\">\n        <div class=\"columns\">\n          <div class=\"column\">\n            <div class=\"is-pulled-right\">\n              <p class=\"time estimate\"><strong>EST: { formatTime(run.estimate) }</strong></p>\n              <p class=\"time pb\">PB: { formatTime(run.pb) }</p>\n            </div>\n            <p class=\"game-name\">{game.name}</p>\n            <p>\n              <span class=\"category-name\">{category.name}</span> &mdash; <span class=\"runner-name\">{runner.name}</span>\n            </p>\n          </div>\n\n          { children.length > 0 &&\n            <div class=\"column is-narrow\">\n              {children}\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Run;\n","module.exports = function atoa (a, n) { return Array.prototype.slice.call(a, n); }\n","var si = typeof setImmediate === 'function', tick;\nif (si) {\n  tick = function (fn) { setImmediate(fn); };\n} else {\n  tick = function (fn) { setTimeout(fn, 0); };\n}\n\nmodule.exports = tick;","'use strict';\n\nvar ticky = require('ticky');\n\nmodule.exports = function debounce (fn, args, ctx) {\n  if (!fn) { return; }\n  ticky(function run () {\n    fn.apply(ctx || null, args || []);\n  });\n};\n","'use strict';\n\nvar atoa = require('atoa');\nvar debounce = require('./debounce');\n\nmodule.exports = function emitter (thing, options) {\n  var opts = options || {};\n  var evt = {};\n  if (thing === undefined) { thing = {}; }\n  thing.on = function (type, fn) {\n    if (!evt[type]) {\n      evt[type] = [fn];\n    } else {\n      evt[type].push(fn);\n    }\n    return thing;\n  };\n  thing.once = function (type, fn) {\n    fn._once = true; // thing.off(fn) still works!\n    thing.on(type, fn);\n    return thing;\n  };\n  thing.off = function (type, fn) {\n    var c = arguments.length;\n    if (c === 1) {\n      delete evt[type];\n    } else if (c === 0) {\n      evt = {};\n    } else {\n      var et = evt[type];\n      if (!et) { return thing; }\n      et.splice(et.indexOf(fn), 1);\n    }\n    return thing;\n  };\n  thing.emit = function () {\n    var args = atoa(arguments);\n    return thing.emitterSnapshot(args.shift()).apply(this, args);\n  };\n  thing.emitterSnapshot = function (type) {\n    var et = (evt[type] || []).slice(0);\n    return function () {\n      var args = atoa(arguments);\n      var ctx = this || thing;\n      if (type === 'error' && opts.throws !== false && !et.length) { throw args.length === 1 ? args[0] : args; }\n      et.forEach(function emitter (listen) {\n        if (opts.async) { debounce(listen, args, ctx); } else { listen.apply(ctx, args); }\n        if (listen._once) { thing.off(type, listen); }\n      });\n      return thing;\n    };\n  };\n  return thing;\n};\n","\nvar NativeCustomEvent = global.CustomEvent;\n\nfunction useNative () {\n  try {\n    var p = new NativeCustomEvent('cat', { detail: { foo: 'bar' } });\n    return  'cat' === p.type && 'bar' === p.detail.foo;\n  } catch (e) {\n  }\n  return false;\n}\n\n/**\n * Cross-browser `CustomEvent` constructor.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent.CustomEvent\n *\n * @public\n */\n\nmodule.exports = useNative() ? NativeCustomEvent :\n\n// IE >= 9\n'function' === typeof document.createEvent ? function CustomEvent (type, params) {\n  var e = document.createEvent('CustomEvent');\n  if (params) {\n    e.initCustomEvent(type, params.bubbles, params.cancelable, params.detail);\n  } else {\n    e.initCustomEvent(type, false, false, void 0);\n  }\n  return e;\n} :\n\n// IE <= 8\nfunction CustomEvent (type, params) {\n  var e = document.createEventObject();\n  e.type = type;\n  if (params) {\n    e.bubbles = Boolean(params.bubbles);\n    e.cancelable = Boolean(params.cancelable);\n    e.detail = params.detail;\n  } else {\n    e.bubbles = false;\n    e.cancelable = false;\n    e.detail = void 0;\n  }\n  return e;\n}\n","'use strict';\n\nvar eventmap = [];\nvar eventname = '';\nvar ron = /^on/;\n\nfor (eventname in global) {\n  if (ron.test(eventname)) {\n    eventmap.push(eventname.slice(2));\n  }\n}\n\nmodule.exports = eventmap;\n","'use strict';\n\nvar customEvent = require('custom-event');\nvar eventmap = require('./eventmap');\nvar doc = global.document;\nvar addEvent = addEventEasy;\nvar removeEvent = removeEventEasy;\nvar hardCache = [];\n\nif (!global.addEventListener) {\n  addEvent = addEventHard;\n  removeEvent = removeEventHard;\n}\n\nmodule.exports = {\n  add: addEvent,\n  remove: removeEvent,\n  fabricate: fabricateEvent\n};\n\nfunction addEventEasy (el, type, fn, capturing) {\n  return el.addEventListener(type, fn, capturing);\n}\n\nfunction addEventHard (el, type, fn) {\n  return el.attachEvent('on' + type, wrap(el, type, fn));\n}\n\nfunction removeEventEasy (el, type, fn, capturing) {\n  return el.removeEventListener(type, fn, capturing);\n}\n\nfunction removeEventHard (el, type, fn) {\n  var listener = unwrap(el, type, fn);\n  if (listener) {\n    return el.detachEvent('on' + type, listener);\n  }\n}\n\nfunction fabricateEvent (el, type, model) {\n  var e = eventmap.indexOf(type) === -1 ? makeCustomEvent() : makeClassicEvent();\n  if (el.dispatchEvent) {\n    el.dispatchEvent(e);\n  } else {\n    el.fireEvent('on' + type, e);\n  }\n  function makeClassicEvent () {\n    var e;\n    if (doc.createEvent) {\n      e = doc.createEvent('Event');\n      e.initEvent(type, true, true);\n    } else if (doc.createEventObject) {\n      e = doc.createEventObject();\n    }\n    return e;\n  }\n  function makeCustomEvent () {\n    return new customEvent(type, { detail: model });\n  }\n}\n\nfunction wrapperFactory (el, type, fn) {\n  return function wrapper (originalEvent) {\n    var e = originalEvent || global.event;\n    e.target = e.target || e.srcElement;\n    e.preventDefault = e.preventDefault || function preventDefault () { e.returnValue = false; };\n    e.stopPropagation = e.stopPropagation || function stopPropagation () { e.cancelBubble = true; };\n    e.which = e.which || e.keyCode;\n    fn.call(el, e);\n  };\n}\n\nfunction wrap (el, type, fn) {\n  var wrapper = unwrap(el, type, fn) || wrapperFactory(el, type, fn);\n  hardCache.push({\n    wrapper: wrapper,\n    element: el,\n    type: type,\n    fn: fn\n  });\n  return wrapper;\n}\n\nfunction unwrap (el, type, fn) {\n  var i = find(el, type, fn);\n  if (i) {\n    var wrapper = hardCache[i].wrapper;\n    hardCache.splice(i, 1); // free up a tad of memory\n    return wrapper;\n  }\n}\n\nfunction find (el, type, fn) {\n  var i, item;\n  for (i = 0; i < hardCache.length; i++) {\n    item = hardCache[i];\n    if (item.element === el && item.type === type && item.fn === fn) {\n      return i;\n    }\n  }\n}\n","'use strict';\n\nvar cache = {};\nvar start = '(?:^|\\\\s)';\nvar end = '(?:\\\\s|$)';\n\nfunction lookupClass (className) {\n  var cached = cache[className];\n  if (cached) {\n    cached.lastIndex = 0;\n  } else {\n    cache[className] = cached = new RegExp(start + className + end, 'g');\n  }\n  return cached;\n}\n\nfunction addClass (el, className) {\n  var current = el.className;\n  if (!current.length) {\n    el.className = className;\n  } else if (!lookupClass(className).test(current)) {\n    el.className += ' ' + className;\n  }\n}\n\nfunction rmClass (el, className) {\n  el.className = el.className.replace(lookupClass(className), ' ').trim();\n}\n\nmodule.exports = {\n  add: addClass,\n  rm: rmClass\n};\n","'use strict';\n\nvar emitter = require('contra/emitter');\nvar crossvent = require('crossvent');\nvar classes = require('./classes');\nvar doc = document;\nvar documentElement = doc.documentElement;\n\nfunction dragula (initialContainers, options) {\n  var len = arguments.length;\n  if (len === 1 && Array.isArray(initialContainers) === false) {\n    options = initialContainers;\n    initialContainers = [];\n  }\n  var _mirror; // mirror image\n  var _source; // source container\n  var _item; // item being dragged\n  var _offsetX; // reference x\n  var _offsetY; // reference y\n  var _moveX; // reference move x\n  var _moveY; // reference move y\n  var _initialSibling; // reference sibling when grabbed\n  var _currentSibling; // reference sibling now\n  var _copy; // item used for copying\n  var _renderTimer; // timer for setTimeout renderMirrorImage\n  var _lastDropTarget = null; // last container item was over\n  var _grabbed; // holds mousedown context until first mousemove\n\n  var o = options || {};\n  if (o.moves === void 0) { o.moves = always; }\n  if (o.accepts === void 0) { o.accepts = always; }\n  if (o.invalid === void 0) { o.invalid = invalidTarget; }\n  if (o.containers === void 0) { o.containers = initialContainers || []; }\n  if (o.isContainer === void 0) { o.isContainer = never; }\n  if (o.copy === void 0) { o.copy = false; }\n  if (o.copySortSource === void 0) { o.copySortSource = false; }\n  if (o.revertOnSpill === void 0) { o.revertOnSpill = false; }\n  if (o.removeOnSpill === void 0) { o.removeOnSpill = false; }\n  if (o.direction === void 0) { o.direction = 'vertical'; }\n  if (o.ignoreInputTextSelection === void 0) { o.ignoreInputTextSelection = true; }\n  if (o.mirrorContainer === void 0) { o.mirrorContainer = doc.body; }\n\n  var drake = emitter({\n    containers: o.containers,\n    start: manualStart,\n    end: end,\n    cancel: cancel,\n    remove: remove,\n    destroy: destroy,\n    canMove: canMove,\n    dragging: false\n  });\n\n  if (o.removeOnSpill === true) {\n    drake.on('over', spillOver).on('out', spillOut);\n  }\n\n  events();\n\n  return drake;\n\n  function isContainer (el) {\n    return drake.containers.indexOf(el) !== -1 || o.isContainer(el);\n  }\n\n  function events (remove) {\n    var op = remove ? 'remove' : 'add';\n    touchy(documentElement, op, 'mousedown', grab);\n    touchy(documentElement, op, 'mouseup', release);\n  }\n\n  function eventualMovements (remove) {\n    var op = remove ? 'remove' : 'add';\n    touchy(documentElement, op, 'mousemove', startBecauseMouseMoved);\n  }\n\n  function movements (remove) {\n    var op = remove ? 'remove' : 'add';\n    crossvent[op](documentElement, 'selectstart', preventGrabbed); // IE8\n    crossvent[op](documentElement, 'click', preventGrabbed);\n  }\n\n  function destroy () {\n    events(true);\n    release({});\n  }\n\n  function preventGrabbed (e) {\n    if (_grabbed) {\n      e.preventDefault();\n    }\n  }\n\n  function grab (e) {\n    _moveX = e.clientX;\n    _moveY = e.clientY;\n\n    var ignore = whichMouseButton(e) !== 1 || e.metaKey || e.ctrlKey;\n    if (ignore) {\n      return; // we only care about honest-to-god left clicks and touch events\n    }\n    var item = e.target;\n    var context = canStart(item);\n    if (!context) {\n      return;\n    }\n    _grabbed = context;\n    eventualMovements();\n    if (e.type === 'mousedown') {\n      if (isInput(item)) { // see also: https://github.com/bevacqua/dragula/issues/208\n        item.focus(); // fixes https://github.com/bevacqua/dragula/issues/176\n      } else {\n        e.preventDefault(); // fixes https://github.com/bevacqua/dragula/issues/155\n      }\n    }\n  }\n\n  function startBecauseMouseMoved (e) {\n    if (!_grabbed) {\n      return;\n    }\n    if (whichMouseButton(e) === 0) {\n      release({});\n      return; // when text is selected on an input and then dragged, mouseup doesn't fire. this is our only hope\n    }\n    // truthy check fixes #239, equality fixes #207\n    if (e.clientX !== void 0 && e.clientX === _moveX && e.clientY !== void 0 && e.clientY === _moveY) {\n      return;\n    }\n    if (o.ignoreInputTextSelection) {\n      var clientX = getCoord('clientX', e);\n      var clientY = getCoord('clientY', e);\n      var elementBehindCursor = doc.elementFromPoint(clientX, clientY);\n      if (isInput(elementBehindCursor)) {\n        return;\n      }\n    }\n\n    var grabbed = _grabbed; // call to end() unsets _grabbed\n    eventualMovements(true);\n    movements();\n    end();\n    start(grabbed);\n\n    var offset = getOffset(_item);\n    _offsetX = getCoord('pageX', e) - offset.left;\n    _offsetY = getCoord('pageY', e) - offset.top;\n\n    classes.add(_copy || _item, 'gu-transit');\n    renderMirrorImage();\n    drag(e);\n  }\n\n  function canStart (item) {\n    if (drake.dragging && _mirror) {\n      return;\n    }\n    if (isContainer(item)) {\n      return; // don't drag container itself\n    }\n    var handle = item;\n    while (getParent(item) && isContainer(getParent(item)) === false) {\n      if (o.invalid(item, handle)) {\n        return;\n      }\n      item = getParent(item); // drag target should be a top element\n      if (!item) {\n        return;\n      }\n    }\n    var source = getParent(item);\n    if (!source) {\n      return;\n    }\n    if (o.invalid(item, handle)) {\n      return;\n    }\n\n    var movable = o.moves(item, source, handle, nextEl(item));\n    if (!movable) {\n      return;\n    }\n\n    return {\n      item: item,\n      source: source\n    };\n  }\n\n  function canMove (item) {\n    return !!canStart(item);\n  }\n\n  function manualStart (item) {\n    var context = canStart(item);\n    if (context) {\n      start(context);\n    }\n  }\n\n  function start (context) {\n    if (isCopy(context.item, context.source)) {\n      _copy = context.item.cloneNode(true);\n      drake.emit('cloned', _copy, context.item, 'copy');\n    }\n\n    _source = context.source;\n    _item = context.item;\n    _initialSibling = _currentSibling = nextEl(context.item);\n\n    drake.dragging = true;\n    drake.emit('drag', _item, _source);\n  }\n\n  function invalidTarget () {\n    return false;\n  }\n\n  function end () {\n    if (!drake.dragging) {\n      return;\n    }\n    var item = _copy || _item;\n    drop(item, getParent(item));\n  }\n\n  function ungrab () {\n    _grabbed = false;\n    eventualMovements(true);\n    movements(true);\n  }\n\n  function release (e) {\n    ungrab();\n\n    if (!drake.dragging) {\n      return;\n    }\n    var item = _copy || _item;\n    var clientX = getCoord('clientX', e);\n    var clientY = getCoord('clientY', e);\n    var elementBehindCursor = getElementBehindPoint(_mirror, clientX, clientY);\n    var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);\n    if (dropTarget && ((_copy && o.copySortSource) || (!_copy || dropTarget !== _source))) {\n      drop(item, dropTarget);\n    } else if (o.removeOnSpill) {\n      remove();\n    } else {\n      cancel();\n    }\n  }\n\n  function drop (item, target) {\n    var parent = getParent(item);\n    if (_copy && o.copySortSource && target === _source) {\n      parent.removeChild(_item);\n    }\n    if (isInitialPlacement(target)) {\n      drake.emit('cancel', item, _source, _source);\n    } else {\n      drake.emit('drop', item, target, _source, _currentSibling);\n    }\n    cleanup();\n  }\n\n  function remove () {\n    if (!drake.dragging) {\n      return;\n    }\n    var item = _copy || _item;\n    var parent = getParent(item);\n    if (parent) {\n      parent.removeChild(item);\n    }\n    drake.emit(_copy ? 'cancel' : 'remove', item, parent, _source);\n    cleanup();\n  }\n\n  function cancel (revert) {\n    if (!drake.dragging) {\n      return;\n    }\n    var reverts = arguments.length > 0 ? revert : o.revertOnSpill;\n    var item = _copy || _item;\n    var parent = getParent(item);\n    var initial = isInitialPlacement(parent);\n    if (initial === false && reverts) {\n      if (_copy) {\n        if (parent) {\n          parent.removeChild(_copy);\n        }\n      } else {\n        _source.insertBefore(item, _initialSibling);\n      }\n    }\n    if (initial || reverts) {\n      drake.emit('cancel', item, _source, _source);\n    } else {\n      drake.emit('drop', item, parent, _source, _currentSibling);\n    }\n    cleanup();\n  }\n\n  function cleanup () {\n    var item = _copy || _item;\n    ungrab();\n    removeMirrorImage();\n    if (item) {\n      classes.rm(item, 'gu-transit');\n    }\n    if (_renderTimer) {\n      clearTimeout(_renderTimer);\n    }\n    drake.dragging = false;\n    if (_lastDropTarget) {\n      drake.emit('out', item, _lastDropTarget, _source);\n    }\n    drake.emit('dragend', item);\n    _source = _item = _copy = _initialSibling = _currentSibling = _renderTimer = _lastDropTarget = null;\n  }\n\n  function isInitialPlacement (target, s) {\n    var sibling;\n    if (s !== void 0) {\n      sibling = s;\n    } else if (_mirror) {\n      sibling = _currentSibling;\n    } else {\n      sibling = nextEl(_copy || _item);\n    }\n    return target === _source && sibling === _initialSibling;\n  }\n\n  function findDropTarget (elementBehindCursor, clientX, clientY) {\n    var target = elementBehindCursor;\n    while (target && !accepted()) {\n      target = getParent(target);\n    }\n    return target;\n\n    function accepted () {\n      var droppable = isContainer(target);\n      if (droppable === false) {\n        return false;\n      }\n\n      var immediate = getImmediateChild(target, elementBehindCursor);\n      var reference = getReference(target, immediate, clientX, clientY);\n      var initial = isInitialPlacement(target, reference);\n      if (initial) {\n        return true; // should always be able to drop it right back where it was\n      }\n      return o.accepts(_item, target, _source, reference);\n    }\n  }\n\n  function drag (e) {\n    if (!_mirror) {\n      return;\n    }\n    e.preventDefault();\n\n    var clientX = getCoord('clientX', e);\n    var clientY = getCoord('clientY', e);\n    var x = clientX - _offsetX;\n    var y = clientY - _offsetY;\n\n    _mirror.style.left = x + 'px';\n    _mirror.style.top = y + 'px';\n\n    var item = _copy || _item;\n    var elementBehindCursor = getElementBehindPoint(_mirror, clientX, clientY);\n    var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);\n    var changed = dropTarget !== null && dropTarget !== _lastDropTarget;\n    if (changed || dropTarget === null) {\n      out();\n      _lastDropTarget = dropTarget;\n      over();\n    }\n    var parent = getParent(item);\n    if (dropTarget === _source && _copy && !o.copySortSource) {\n      if (parent) {\n        parent.removeChild(item);\n      }\n      return;\n    }\n    var reference;\n    var immediate = getImmediateChild(dropTarget, elementBehindCursor);\n    if (immediate !== null) {\n      reference = getReference(dropTarget, immediate, clientX, clientY);\n    } else if (o.revertOnSpill === true && !_copy) {\n      reference = _initialSibling;\n      dropTarget = _source;\n    } else {\n      if (_copy && parent) {\n        parent.removeChild(item);\n      }\n      return;\n    }\n    if (\n      (reference === null && changed) ||\n      reference !== item &&\n      reference !== nextEl(item)\n    ) {\n      _currentSibling = reference;\n      dropTarget.insertBefore(item, reference);\n      drake.emit('shadow', item, dropTarget, _source);\n    }\n    function moved (type) { drake.emit(type, item, _lastDropTarget, _source); }\n    function over () { if (changed) { moved('over'); } }\n    function out () { if (_lastDropTarget) { moved('out'); } }\n  }\n\n  function spillOver (el) {\n    classes.rm(el, 'gu-hide');\n  }\n\n  function spillOut (el) {\n    if (drake.dragging) { classes.add(el, 'gu-hide'); }\n  }\n\n  function renderMirrorImage () {\n    if (_mirror) {\n      return;\n    }\n    var rect = _item.getBoundingClientRect();\n    _mirror = _item.cloneNode(true);\n    _mirror.style.width = getRectWidth(rect) + 'px';\n    _mirror.style.height = getRectHeight(rect) + 'px';\n    classes.rm(_mirror, 'gu-transit');\n    classes.add(_mirror, 'gu-mirror');\n    o.mirrorContainer.appendChild(_mirror);\n    touchy(documentElement, 'add', 'mousemove', drag);\n    classes.add(o.mirrorContainer, 'gu-unselectable');\n    drake.emit('cloned', _mirror, _item, 'mirror');\n  }\n\n  function removeMirrorImage () {\n    if (_mirror) {\n      classes.rm(o.mirrorContainer, 'gu-unselectable');\n      touchy(documentElement, 'remove', 'mousemove', drag);\n      getParent(_mirror).removeChild(_mirror);\n      _mirror = null;\n    }\n  }\n\n  function getImmediateChild (dropTarget, target) {\n    var immediate = target;\n    while (immediate !== dropTarget && getParent(immediate) !== dropTarget) {\n      immediate = getParent(immediate);\n    }\n    if (immediate === documentElement) {\n      return null;\n    }\n    return immediate;\n  }\n\n  function getReference (dropTarget, target, x, y) {\n    var horizontal = o.direction === 'horizontal';\n    var reference = target !== dropTarget ? inside() : outside();\n    return reference;\n\n    function outside () { // slower, but able to figure out any position\n      var len = dropTarget.children.length;\n      var i;\n      var el;\n      var rect;\n      for (i = 0; i < len; i++) {\n        el = dropTarget.children[i];\n        rect = el.getBoundingClientRect();\n        if (horizontal && (rect.left + rect.width / 2) > x) { return el; }\n        if (!horizontal && (rect.top + rect.height / 2) > y) { return el; }\n      }\n      return null;\n    }\n\n    function inside () { // faster, but only available if dropped inside a child element\n      var rect = target.getBoundingClientRect();\n      if (horizontal) {\n        return resolve(x > rect.left + getRectWidth(rect) / 2);\n      }\n      return resolve(y > rect.top + getRectHeight(rect) / 2);\n    }\n\n    function resolve (after) {\n      return after ? nextEl(target) : target;\n    }\n  }\n\n  function isCopy (item, container) {\n    return typeof o.copy === 'boolean' ? o.copy : o.copy(item, container);\n  }\n}\n\nfunction touchy (el, op, type, fn) {\n  var touch = {\n    mouseup: 'touchend',\n    mousedown: 'touchstart',\n    mousemove: 'touchmove'\n  };\n  var pointers = {\n    mouseup: 'pointerup',\n    mousedown: 'pointerdown',\n    mousemove: 'pointermove'\n  };\n  var microsoft = {\n    mouseup: 'MSPointerUp',\n    mousedown: 'MSPointerDown',\n    mousemove: 'MSPointerMove'\n  };\n  if (global.navigator.pointerEnabled) {\n    crossvent[op](el, pointers[type], fn);\n  } else if (global.navigator.msPointerEnabled) {\n    crossvent[op](el, microsoft[type], fn);\n  } else {\n    crossvent[op](el, touch[type], fn);\n    crossvent[op](el, type, fn);\n  }\n}\n\nfunction whichMouseButton (e) {\n  if (e.touches !== void 0) { return e.touches.length; }\n  if (e.which !== void 0 && e.which !== 0) { return e.which; } // see https://github.com/bevacqua/dragula/issues/261\n  if (e.buttons !== void 0) { return e.buttons; }\n  var button = e.button;\n  if (button !== void 0) { // see https://github.com/jquery/jquery/blob/99e8ff1baa7ae341e94bb89c3e84570c7c3ad9ea/src/event.js#L573-L575\n    return button & 1 ? 1 : button & 2 ? 3 : (button & 4 ? 2 : 0);\n  }\n}\n\nfunction getOffset (el) {\n  var rect = el.getBoundingClientRect();\n  return {\n    left: rect.left + getScroll('scrollLeft', 'pageXOffset'),\n    top: rect.top + getScroll('scrollTop', 'pageYOffset')\n  };\n}\n\nfunction getScroll (scrollProp, offsetProp) {\n  if (typeof global[offsetProp] !== 'undefined') {\n    return global[offsetProp];\n  }\n  if (documentElement.clientHeight) {\n    return documentElement[scrollProp];\n  }\n  return doc.body[scrollProp];\n}\n\nfunction getElementBehindPoint (point, x, y) {\n  var p = point || {};\n  var state = p.className;\n  var el;\n  p.className += ' gu-hide';\n  el = doc.elementFromPoint(x, y);\n  p.className = state;\n  return el;\n}\n\nfunction never () { return false; }\nfunction always () { return true; }\nfunction getRectWidth (rect) { return rect.width || (rect.right - rect.left); }\nfunction getRectHeight (rect) { return rect.height || (rect.bottom - rect.top); }\nfunction getParent (el) { return el.parentNode === doc ? null : el.parentNode; }\nfunction isInput (el) { return el.tagName === 'INPUT' || el.tagName === 'TEXTAREA' || el.tagName === 'SELECT' || isEditable(el); }\nfunction isEditable (el) {\n  if (!el) { return false; } // no parents were editable\n  if (el.contentEditable === 'false') { return false; } // stop the lookup\n  if (el.contentEditable === 'true') { return true; } // found a contentEditable element in the chain\n  return isEditable(getParent(el)); // contentEditable is set to 'inherit'\n}\n\nfunction nextEl (el) {\n  return el.nextElementSibling || manually();\n  function manually () {\n    var sibling = el;\n    do {\n      sibling = sibling.nextSibling;\n    } while (sibling && sibling.nodeType !== 1);\n    return sibling;\n  }\n}\n\nfunction getEventHost (e) {\n  // on touchend event, we have to use `e.changedTouches`\n  // see http://stackoverflow.com/questions/7192563/touchend-event-properties\n  // see https://github.com/bevacqua/dragula/issues/34\n  if (e.targetTouches && e.targetTouches.length) {\n    return e.targetTouches[0];\n  }\n  if (e.changedTouches && e.changedTouches.length) {\n    return e.changedTouches[0];\n  }\n  return e;\n}\n\nfunction getCoord (coord, e) {\n  var host = getEventHost(e);\n  var missMap = {\n    pageX: 'clientX', // IE8\n    pageY: 'clientY' // IE8\n  };\n  if (coord in missMap && !(coord in host) && missMap[coord] in host) {\n    coord = missMap[coord];\n  }\n  return host[coord];\n}\n\nmodule.exports = dragula;\n","'use strict';\n\nvar dragula = require('dragula');\nvar atoa = require('atoa');\n\nfunction reactDragula () {\n  return dragula.apply(this, atoa(arguments)).on('cloned', cloned);\n\n  function cloned (clone) {\n    rm(clone);\n    atoa(clone.getElementsByTagName('*')).forEach(rm);\n  }\n\n  function rm (el) {\n    el.removeAttribute('data-reactid');\n  }\n}\n\nmodule.exports = reactDragula;\n","import { h, Component } from 'preact';\nimport Dragula from 'react-dragula';\n\nimport Run from './run';\nimport { fuzzysearch } from '../util';\n\n\nclass RunSelector extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      runFilter: null\n    };\n  }\n\n  updateRunFilter(ev) {\n    const input = ev.target;\n    const filterText = input.value;\n\n    this.setState({runFilter: filterText});\n  }\n\n  filteredRuns(runs) {\n    const {runFilter} = this.state;\n    const text = runFilter;\n\n\n    if(!text || text == \"\") return runs;\n\n    return runs.filter((run) => {\n      return  fuzzysearch(text, run.game.name) ||\n              fuzzysearch(text, run.category.name) ||\n              fuzzysearch(text, run.runner.name);\n    })\n  };\n\n  render(props, state) {\n    const {runs, onSelect} = props;\n\n    return(\n      <div class=\"run-selector\">\n        <div class=\"field\">\n          <div class=\"control\">\n            <input class=\"input\" type=\"text\" onKeyUp={this.updateRunFilter.bind(this)} placeholder=\"Filter runs\" />\n          </div>\n        </div>\n        {\n          this.filteredRuns(runs).map((run) =>\n            <Run key={run.id} run={run}>\n              <strong class=\"button\" onClick={() => onSelect(run)}>+</strong>\n            </Run>\n          )\n        }\n      </div>\n    );\n  }\n};\n\nexport default RunSelector;\n","import { h, Component } from 'preact';\nimport Dragula from 'react-dragula';\n\nimport Run from './run';\nimport RunSelector from './run-selector';\n\n\nclass RunSlot extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      active: false,\n      selectedRun: null\n    };\n  }\n\n  toggleActivated() {\n    this.setState({\n      active: !this.state.active\n    });\n  }\n\n  selectRun(run) {\n    const {onChange, entry} = this.props;\n\n    this.setState({\n      active: false,\n      selectedRun: run\n    });\n\n    onChange({\n      ...entry,\n      type: \"run\",\n      runs: [run],\n      duration: run.estimate\n    });\n  }\n\n  removeSlot() {\n    const {onRemove} = this.props;\n\n    onRemove();\n  }\n\n  clear() {\n    const {onChange, entry} = this.props;\n\n    this.setState({\n      selectedRun: null\n    });\n\n    onChange({\n      ...entry,\n      type: \"run\",\n      runs: [],\n      duration: 0\n    });\n  }\n\n  render({availableRuns, entry}, {selectedRun, active}) {\n    let slotClassList = 'run-slot';\n    if(!selectedRun) slotClassList += ' run-slot--empty';\n\n    return(\n      <div class={slotClassList}>\n        { selectedRun\n            ? <Run run={selectedRun}>\n                <strong class=\"button\" onClick={this.clear.bind(this)}>\n                  x\n                </strong>\n              </Run>\n            : <div class=\"run-slot__empty\">\n                <div class=\"level\">\n                  <div class=\"level-left\">\n                    <div class=\"level-item\" onClick={this.toggleActivated.bind(this)}>\n                      { active\n                        ? <span class=\"button is-outlined\">Hide Selector</span>\n                        : <span class=\"button is-outlined\">Select a Run</span>\n                      }\n                    </div>\n                  </div>\n\n                  <div class=\"level-right\">\n                    <div class=\"level-item\" onClick={this.removeSlot.bind(this)}>\n                      <span class=\"button is-outlined\">Remove slot</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n        }\n\n        { active &&\n          <RunSelector runs={availableRuns} onSelect={this.selectRun.bind(this)} />\n        }\n      </div>\n    );\n  }\n};\n\nexport default RunSlot;\n","import { h, Component } from 'preact';\n// import Dragula from 'react-dragula';\n\nimport Run from './run';\nimport RunSlot from './run-slot';\n\nimport { uniqueID } from '../util';\n\n\nclass Scheduler extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      scheduleEntries: []\n    };\n  }\n\n\n  addScheduleEntry(type) {\n    this.setState({\n      scheduleEntries: this.state.scheduleEntries.concat({\n        id: uniqueID(),\n        type: type,\n        runs: [],\n        duration: 0\n      })\n    });\n  }\n\n  updateEntryInSlot(slotIndex, newEntry) {\n    const newEntries = this.state.scheduleEntries.map((entry, index) => {\n      return index == slotIndex ? newEntry : entry;\n    });\n\n    this.setState({\n      scheduleEntries: newEntries\n    });\n  }\n\n  removeScheduleEntry(slotIndex) {\n    const {scheduleEntries} = this.state;\n    console.log(slotIndex);\n    this.setState({\n      scheduleEntries: scheduleEntries.filter((_, i) => i !== slotIndex)\n    });\n  }\n\n  startTimeForEntry(index) {\n    const {startTime} = this.props;\n    const {scheduleEntries} = this.state;\n\n    const entryStartTime = new Date(startTime);\n    for(let i = 0; i < index; i++) {\n      entryStartTime.setMilliseconds(scheduleEntries[i].duration);\n    }\n\n    return entryStartTime;\n  }\n\n\n  render({startTime, runs}, {scheduleEntries}) {\n    const runsById = runs.reduce((acc, run) => {\n      acc[run.id] = run;\n      return acc;\n    }, {});\n\n    const availableRuns = runs.filter((run) => {\n      return !scheduleEntries.some((entry) => {\n        return entry.runs.includes(run)\n      })\n    });\n\n    return (\n      <div class=\"scheduler\">\n        <div class=\"content\">\n          <p>Drag runs from the left to the timeline on the right to create a schedule. Create races by dragging a run on top of another run on the right.</p>\n\n          <p>While creating a schedule, try to keep in mind the runners' time zones and general availability. If you aren't sure about someone's availability, it's better to ask <i>before</i> finalizing your schedule to avoid rescheduling issues later on.</p>\n\n          <div class=\"field is-grouped\">\n            <div class=\"control\">\n              <button class=\"button is-primary\">Save</button>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"columns\">\n          <div class=\"column is-one-third\">\n            <h1 class=\"title is-4\">Unscheduled Runs</h1>\n            { availableRuns.map((run) => <Run run={run} />) }\n          </div>\n\n          <div class=\"column is-two-thirds\">\n            <h2 class=\"title is-4\">Schedule</h2>\n\n            <div class=\"schedule-container\">\n              {\n                scheduleEntries.map((entry, index) => {\n                  return (\n                    <div class=\"schedule-entry\">\n                      <div class=\"schedule-entry__time\">\n                        {this.startTimeForEntry(index).toLocaleString()}\n                      </div>\n\n                      <div class=\"schedule-entry__slot\">\n                        <RunSlot\n                          key={entry.id}\n                          availableRuns={availableRuns}\n                          entry={entry}\n                          onChange={this.updateEntryInSlot.bind(this, index)}\n                          onRemove={this.removeScheduleEntry.bind(this, index)}\n                        />\n                      </div>\n                    </div>\n                  );\n                })\n              }\n\n              <div class=\"columns\">\n                <div class=\"column\">\n                  <div class=\"button is-primary is-fullwidth\" onClick={this.addScheduleEntry.bind(this, \"run\")}>\n                    Add Run\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Scheduler;\n","import { h, render, Component } from 'preact';\nimport Scheduler from './components/scheduler';\n\n// render an instance of Scheduler into <body>:\nfunction init(callback) {\n  fetch('/api/organizer/runs', {\n    credentials: \"same-origin\"\n  })\n    .then((response) => response.json())\n    .then((data) => callback(data))\n    .catch((error) => console.log(error));\n};\n\ninit((runs) => {\n  const schedulerContainer = document.querySelector('#scheduler-container');\n\n  const eventStart = new Date(\"2018-11-17T23:00:00\");\n\n  return render(<Scheduler runs={runs} startTime={eventStart} />, schedulerContainer);\n});\n"]}